объект Этот сказал голосовая_команда_системе(Результат) :-
	из(Этот, команда(Команда)),
	analyzer: формальный_анализ(Команда, Список_слов),

	findall(словарь(А,Б), словник(А,Б), Словник),
	analyzer: сообщить_словник(Словник),

	множественный_содержательный_анализ([вопросы, назначение_группы, управление_перекличкой, открытие_оценок, прибытие, наличие], 
				Список_слов, Этот, Структуры, Остаток_слов),

	lessons: выполнение_структур(Структуры, Остаток_слов, Этот),
	lessons: финал_выполнения(Структуры, Этот, Результат),
	!.

%=====================================================================
%=====================================================================

множественный_содержательный_анализ([], Список_слов, _Этот, [], Список_слов) :- !.

множественный_содержательный_анализ([Режим|ХвостПоиска], Список_слов, Этот, [Структура|ХвостСтруктур], Слова) :-
	содержательный_анализ(Режим, Список_слов, Этот, Структура, Остаток_слов),
	Структура \= undefined,

	множественный_содержательный_анализ(ХвостПоиска, Остаток_слов, Этот, ХвостСтруктур, Слова),
	!.
	
множественный_содержательный_анализ([_Режим|ХвостПоиска], Список_слов, Этот, ХвостСтруктур, Слова) :-
	множественный_содержательный_анализ(ХвостПоиска, Список_слов, Этот, ХвостСтруктур, Слова),
	!.

%----------------------------------------------------------------------

содержательный_анализ(Режим, Список_слов, Этот, Структура, Остаточный_список) :-
	Предикат =.. [Режим, Структура, Этот, Список_слов, Остаточный_список],
	call(Предикат),
	!.
 
содержательный_анализ(_Режим, Список_слов, _Этот, undefined, Список_слов).

%=========================================================================
%=========================================================================


назначение_группы(группа(НомерСимв), _Этот) --> содержит_смысл(группа), содержит_двузначный_номер(НомерСимв).

управление_перекличкой(перекличка(вкл), _Этот) --> содержит_смысл(перекличка), содержит_смысл(включение).
управление_перекличкой(перекличка(выкл), _Этот) --> содержит_смысл(перекличка), содержит_смысл(выключение).
управление_перекличкой(перекличка(неизв), _Этот) --> содержит_смысл(перекличка).

открытие_оценок(новый_объект(тематическое_занятие_а), _Этот) --> содержит_смысл(оценки).



вопросы(кто(отсутствует), _Этот) --> содержит_смысл(кто_конкретно), содержит_смысл(отсутствует).

вопросы(кто(присутствует), _Этот) --> содержит_смысл(кто_конкретно), содержит_смысл(присутствует).

вопросы(кто(опоздал), _Этот) --> содержит_смысл(кто_конкретно), содержит_смысл(опоздал).

вопросы(кто(отпросился), _Этот) --> содержит_смысл(кто_конкретно), содержит_смысл(отпросился).

/*
прибытие(прибыл(ID_студента), _Этот) --> содержит_смысл(прибыл), содержит_фамилию_и_имя(ID_студента, Этот).
*/

прибытие(прибыл(ID_студента), Этот) --> содержит_смысл(прибыл), содержит_фамилию(ID_студента, Этот).

наличие(наличие(ID_студента), Этот) --> содержит_фамилию(ID_студента, Этот).


%-------------------------

содержит_двузначный_номер(НомерСимв, [НомерСимв|List], List) :-
	digital(НомерСимв, 2),
	!.


содержит_двузначный_номер(НомерСимв, [First|List], [First|RestList]) :-
	содержит_двузначный_номер(НомерСимв, List, RestList).


%-------------------------------------------------------------------------

digital(Num, Count) :- atom_chars(Num, CharList), length(CharList, Count), all_digits(CharList).

all_digits([Char]) :- member(Char, ['0','1','2','3','4','5','6','7','8','9']),
			!.

all_digits([Char|RestList]) :- 
	member(Char, ['0','1','2','3','4','5','6','7','8','9']),
	all_digits(RestList).


%-------------------------

содержит_фамилию(ID_студента, Этот, [Фамилия|List], List) :- 
	есть_в_списке_студентов(Фамилия, Этот, ID_студента),
	!.

содержит_фамилию(ID_студента, Этот, [First|List], [First|RestList]) :-
	содержит_фамилию(ID_студента, Этот, List, RestList),
	!.

%-------------------------

есть_в_списке_студентов(Фамилия_искаженная, Этот, ID_студента) :-
	из(Этот, список_студентов(СписокА)),
	term_to_atom(Список, СписокА),
	выяснить_про_фамилию(Фамилия_искаженная, Список, ID_студента),
	!.

%-----------

выяснить_про_фамилию(Фамилия_искаженная, [ID_студента|Хвост], ID_студента) :-
	из(студент/ID_студента, фамилия(Эталон)),	
	
	analyzer:близко(Фамилия_искаженная, Эталон, _Ответ),
	!.

выяснить_про_фамилию(Фамилия_искаженная, [ID_студента|Хвост], ID_студента) :-
	из(студент/ID_студента, фамилия(Эталон)),	

	коррекция_простой_и_списочный_формат(Фамилия_искаженная, Эталон),
	!.

выяснить_про_фамилию(Фамилия, [_|Хвост], ID_студента) :-
	выяснить_про_фамилию(Фамилия, Хвост, ID_студента),
	!.

%=========================================================================
%=========================================================================

содержит_смысл(Смысл, List, RestList) :-
	analyzer: смысл(Смысл, List, RestList),
	!.
содержит_смысл(Смысл, [First|List], [First|RestList]) :-
	содержит_смысл(Смысл, List, RestList).

%=========================================================================

   словник(перекличка, [wd(регистр, ация, [e])]).
   словник(перекличка, [wd(переклич, ка, [e])]).
   словник(перекличка, [wd(отмет, ка, [e])]).
   словник(перекличка, [wd(отсутст, вующие, [e])]).
   словник(перекличка, [wd(присутст, вующие, [e])]).

   словник(включение, [wd(вкл, ючение, [e])]).
   словник(включение, [wd(запуст, им, [e])]).
   словник(включение, [wd(вруб, им, [e])]).
   словник(включение, [wd(нач, ать, [e])]).
   словник(включение, [wd(старт, ануть, [e])]).

   словник(выключение, [wd(выкл, ючение, [e])]).
   словник(выключение, [wd(останов, им, [e])]).
   словник(выключение, [wd(прекрат, ить, [e])]).
   словник(выключение, [wd(конч, ить, [e])]).
   словник(выключение, [wd(законч, ить, [e])]).
   словник(выключение, [wd(тормоз, нуть, [e])]).



   словник(группа, [wd(груп, па, [e])]).

   словник(оценки, [wd(оцен, ки, [e])]).
   словник(оценки, [wd(балл, ы, [e])]).
   словник(оценки, [wd(успеваем, ость, [e])]).
   словник(оценки, [wd(тематич, еское, [e])]).



   словник(кто_конкретно, [wd(кто, '', [d])]).
   словник(кто_конкретно, [wd(кого, '', [d])]).
   словник(кто_конкретно, [wd(фамили, и, [e])]).

   словник(отсутствует, [wd(отсу, тствует, [e])]).
   словник(отсутствует, [wd(нет, '', [d])]).


   словник(присутствует, [wd(присут, ствует, [e])]).
   словник(присутствует, [wd(здес, ь, [e])]).
   словник(присутствует, [wd(нами, '', [d])]).

   словник(опоздал, [wd(опозд, ал, [e])]).
   словник(опоздал, [wd(опазд, ывает, [e])]).

   словник(отпросился, [wd(отпрос, ился, [e])]).
   словник(отпросился, [wd(прос, ился, [e])]).
   словник(отпросился, [wd(отпраш, ивался, [e])]).
   словник(отпросился, [wd(уважит, ельной, [e])]).

   словник(прибыл, [wd(прибыл, '', [e])]).
   словник(прибыл, [wd(приш, ел, [e])]).
   словник(прибыл, [wd(заш, ел, [e])]).
   словник(прибыл, [wd(появил, ся, [e])]).
   словник(прибыл, [wd(пожалов, ал, [e])]).
   словник(прибыл, [wd(приех, ал, [e])]).

%============================================================
%============================================================

коррекция_простой_и_списочный_формат(Искаженное, Эталонное) :-
	downcase_atom(Искаженное, Искаженное_н),
	downcase_atom(Эталонное, Эталонное_н),

	коррекция(Простое_или_список, Эталонное_н),

	lists: is_list(Простое_или_список),
	lists: memberchk(Искаженное_н, Простое_или_список),
	!;

	downcase_atom(Искаженное, Искаженное_н),
	downcase_atom(Эталонное, Эталонное_н),

	коррекция(Искаженное_н, Эталонное_н),
	!.

% коррекция(Фамилия, Фамилия).


%------------------------------------------------------------

% ТИ-31

коррекция(анастасию, анастасьев).
коррекция(дивов, димов).
коррекция(носиков, майсигов). 
коррекция(кусенкова, кушинкова). 
коррекция(левашово, литашова).
коррекция('40 пудов', сорокопудов). 
коррекция('сорок пудов', сорокопудов). 
коррекция(600, шевцов). 


% ТИ-32

коррекция(рыжевский, иржавский).
коррекция(иршавский, иржавский). 
коррекция(ржевский, иржавский). 
коррекция(ижевский, иржавский).
коррекция(беларусь, белоус). 
коррекция(клубняк, кругляк). 

коррекция(ок, огий).

% ТИ-51

коррекция([иваново, канада, данного, зановго, звонок], иванова). 
коррекция(['и в dota', 'стих тете', евдоким, ифтоди], ифтоде). 
коррекция([конов, канаш], коннов).
коррекция([конопкин, кнопкина], конопкина). 
коррекция([клип, лип, лем, ле, lev], ли). 
коррекция([песни, кашне, пешкин], пешнин). 
коррекция([бухин, 'я блохин'], рябухин). 
коррекция([salut, салюк, совок], салук). 
коррекция(федотово, федотова).
коррекция([ферина, хелена], филина). 
коррекция(илькин, филькин). 
коррекция(чигинцева, чибинцева).

% ТИ-71

коррекция(оганова, агафонова). 
коррекция(ксенон, аксенов).

коррекция([хромова, громовна], громова).

коррекция([мали, майли], малий). 
коррекция(['азино-2', озинше, 'один из'], озиндже). 
коррекция([леонтьев, блинчик], плетнев). 


коррекция([цыбуль, сибаль], цыбаль). 
коррекция([чирчик, черчек, чирчек], черчик).


 	